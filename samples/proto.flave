// Things to implement this will not transpile
[global trim(true)]
[global pretty(true)]
[global quote(')]

[quote(')]

class $V{
  view main{
      <div class="@(data.wrapperclass)">
        <h1>Comments</h1>
        //These Comments will be stripped outfile
        /*
          As will these
        */
        <!-- HTML COMMENT SHOULD BE IN CODE -->
        <h1>Characters</h1>
          \{\}[]()\@\\
        <h1>Blocks</h1>
        <pre>\@\{\} = --&gt;@{var list = data.li;}&lt;--</pre>
        <pre>\@() = --&gt;@(data.testString)&lt;--</pre>
        <h1>Conditionals</h1>
        <h2>for</h2>
        <ul>@(conditionals.forloop(list))</ul>
        <h2>if, else if, else</h2>
          @(conditionals.ifelse({content: 'Lorem Ipsum wants to be em\\\'d', b:false, em:true}))
        <h2>while</h2>
          @(conditionals.whileloop(utilities.trimString("  I EXECUTED IN A WHILE LOOP  ")))
        <h2>mixed</h2>
        @(conditionals.mixed(data.mixed))
      </div>
  }
  function testObject{
    return {
      'testString': 'Lorem Ipsum',
      'mixed': 'Wierd mixed code',
      'li':[{'style':'color:red','content':'Red' }, {'style':'color:blue','content':'Blue'}],
      'wrapperclass': 'stylish'
    }
  }
  function test{
    return this.main(this.testObject());
  }
}
class utilities{
  function trimString{
    return data.trim();
  }
}
class conditionals {
  view forloop{
    @for(var i = 0; i < data.length; i++)
      <li style="@(data[i].style)">@(utilities.trimString(data[i].content))</li>
  }
  view ifelse{
    //The bad formatting is intentional. Don't judge.
    @if(data.title) <h3>@(data.title)</h3>
    @if(data.b)<b> @(data.content) </b>
    @elseif(data.em){
<em>
  @(data.content)
</em>
    }
    @else
          <span>@(data.content)</span>
  }
  view whileloop{
    @{var condition = true;}
    @while(condition){
       --&gt;@(data)&lt;--
      @{condition = false;}
    }
  }
  view switch{
    // Not sure how this should look. Probably kinda how the while loop looks.
  }
  view mixed {
    @{if(data)\{}
     <h1>@(data)</h1>
    @{\}}
  }
}
